:root {
    /* Size and layout variables */
    --hex-size: 140px; /* Single variable to control hexagon size */
    --hex-outline-size: 4px; /* Variable to control the outline thickness */
    --hex-corner-radius: 2.25; /* Variable to control the corner roundness (for blur filter) */
    --hex-num-font-size: calc(var(--hex-size) * 0.08); /* Smaller font size for numbers (for debugging) */
    --hex-label-font-size: calc(var(--hex-size) * 0.12); /* Larger font size for labels */
    --loopback-arrow-size: 45px; /* Size for loopback arrows */
    
    /* Light theme colors (default) */
    --bg-color: #f0f2f5;
    --text-color: #1b1b1b;
    --text-secondary-color: #666;
    --hex-outline-color: #000;
    --hex-bg-color: #fff;
    --hex-hover-bg-color: #f8f8f8;
    --hex-active-bg-color: #4CAF50;
    --hex-active-text-color: #fff;
    --hex-active-num-color: rgba(255, 255, 255, 0.7);
    --hex-hover-label-color: #4CAF50;
    --heading-color: #333;
    --button-bg-color: #4CAF50;
    --button-hover-bg-color: #45a049;
    --button-text-color: #fff;
    --shadow-color: rgba(0,0,0,0.1);
    --shadow-color-strong: rgba(0,0,0,0.2);
    --shadow-color-stronger: rgba(0,0,0,0.25);
    
    /* Sidebar colors */
    --sidebar-bg-color: #fff;
    --sidebar-item-bg: #f8f8f8;
    --sidebar-item-hover-bg: #f2f2f2;
    --sidebar-item-active-bg: #4CAF50;
    --sidebar-item-active-text: #fff;
    
    /* Shadow variables */
    --hex-shadow: 0 2px 5px var(--shadow-color); /* Default shadow */
    --hex-hover-shadow: 0 5px 15px var(--shadow-color-strong); /* Hover shadow */
    --hex-active-shadow: 0 8px 20px var(--shadow-color-stronger); /* Active shadow */
}

/* Dark theme colors - will be applied when .dark-theme class is added to body */
.dark-theme {
    --bg-color: #071717;
    --text-color: #e0e0e0;
    --text-secondary-color: #BFBFBF;
    --hex-outline-color: #685231;
    --hex-bg-color: #051010;
    --hex-hover-bg-color: #0b2222;
    --hex-active-bg-color: #062828;
    --hex-active-text-color: #00db9d;
    --hex-active-num-color: #00db9d;
    --hex-hover-label-color: #00a676;
    --heading-color: #685231;
    --button-bg-color: #685231;
    --button-hover-bg-color: #927345;
    --button-text-color: #e0e0e0;
    --shadow-color: rgba(0,0,0,0.4);
    --shadow-color-strong: rgba(0,0,0,0.6);
    --shadow-color-stronger: rgba(0,0,0,0.8);

    /* Sidebar dark theme colors */
    --sidebar-bg-color: #051010;
    --sidebar-item-bg: #0b2222;
    --sidebar-item-hover-bg: #0c2626;
    --sidebar-item-active-bg: #062828;
    --sidebar-item-active-text: #00db9d;
}

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 20px;
    background-color: var(--bg-color);
    color: var(--text-color);
    display: flex;
    justify-content: center;
    transition: background-color 0.3s, color 0.3s;
}

.container {
    width: calc(var(--hex-size) * 6); /* Match width to hex grid for perfect alignment */
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
}

h1 {
    color: var(--heading-color);
    margin-bottom: 20px;
    transition: color 0.3s;
}

.hex-grid {
    position: relative;
    width: calc(var(--hex-size) * 6); /* Width based on hexagon size */
    height: calc(var(--hex-size) * 5.5); /* Height based on hexagon size */
    margin: 0 auto 30px auto; /* Center horizontally and add bottom margin */
    left: 0; /* Reset any potential offset */
    right: 0; /* Ensure it's centered */
    /* Define this as a containing block for absolute positioning */
    transform: translateZ(0); /* Create a new stacking context */
    box-sizing: border-box; /* Include padding and border in element's width and height */
}

.hex {
    position: absolute;
    width: var(--hex-size);  /* Using variable for width */
    aspect-ratio: 1/cos(30deg); /* Maintain proper hexagon proportions */
    display: grid; /* Use grid for the content */
    place-items: center; /* Center content */
    cursor: pointer;
    /* Enhanced transitions with cubic-bezier for a bouncy effect */
    transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275), 
                box-shadow 0.3s;
    /* Ensure hexagon is positioned from its center */
    transform-origin: center center;
    box-shadow: var(--hex-shadow);
    z-index: 1;
    margin: 0; /* Reset margin */
    box-sizing: border-box; /* Include padding in size calculation */
    padding: 0; /* Reset padding */
    overflow: visible; /* Allow the filter effects to extend beyond boundaries */
    filter: url('#goo'); /* Apply the SVG filter to the whole component */
}

.hex:hover {
    transform: scale(1.1);  /* Regular scaling for hover */
    z-index: 10;
    box-shadow: var(--hex-hover-shadow);
}

/* Subtle highlight for hover state */
.hex:hover .hex-label {
    color: var(--hex-hover-label-color);
}

/* Change the inner part on hover */
.hex:hover .hex-inner::before {
    background-color: var(--hex-hover-bg-color);
}

.hex.active {
    transform: scale(1.05);  /* Regular scaling for active state */
    box-shadow: var(--hex-active-shadow);
}

/* Change the inner background for active state */
.hex.active .hex-inner::before {
    background-color: var(--hex-active-bg-color);
}

.hex.active .hex-label {
    color: var(--hex-active-text-color);
    font-weight: bold;
    z-index: 3;
}

.hex.active .hex-num {
    color: var(--hex-active-num-color); /* Semi-transparent for the number */
    z-index: 3;
}

/* When ready to hide numbers completely, add this class to the body */
.hide-hex-numbers .hex-num {
    opacity: 0;
    visibility: hidden;
}

.hex-content {
    grid-area: 1/1;
    display: grid; /* Use grid instead of flex for better centering */
    place-items: center; /* Center both horizontally and vertically */
    grid-template-areas: "content"; /* Single content area */
    z-index: 3; /* Above both the black and white hexagon layers */
    width: 80%;
    height: 80%;
    pointer-events: none;
    position: relative;
}

.hex-num {
    grid-area: content; /* Place in the content area */
    font-weight: normal;
    font-size: var(--hex-num-font-size); /* Using variable for font size */
    transition: color 0.3s;
    z-index: 3; /* Ensure text is on top of background */
    opacity: 0.6; /* Make it less prominent */
    color: var(--text-secondary-color); /* Lighter color for less emphasis */
    position: absolute;
    bottom: 10%; /* Position at the bottom of the content area */
    margin: 0;
}

.hex-label {
    grid-area: content; /* Place in the content area */
    font-weight: bold;
    font-size: var(--hex-label-font-size); /* Using variable for font size */
    text-align: center;
    max-width: 100%; /* Limit width to ensure text stays contained */
    overflow: hidden;
    color: var(--text-color); /* Main text color for better readability */
    text-overflow: ellipsis;
    transition: color 0.3s;
    z-index: 4; /* Above the number */
    position: relative; /* Establish stacking context */
}

/* Outer hexagon using pseudo-element */
.hex::before {
    content: "";
    grid-area: 1/1;
    width: 100%;
    height: 100%;
    background-color: var(--hex-outline-color);
    clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
    z-index: 1;
    transition: background-color 0.3s;
}

/* White inner hexagon container */
.hex-inner {
    width: calc(100% - (var(--hex-outline-size) * 2));
    height: calc(100% - (var(--hex-outline-size) * 2));
    aspect-ratio: 1/cos(30deg); /* Maintain proper hexagon proportions */
    display: grid;
    place-items: center;
    z-index: 2;
    grid-area: 1/1;
    pointer-events: none;
    filter: url('#goo'); /* Apply the SVG filter to the whole component */
}

/* Inner hexagon shape using pseudo-element */
.hex-inner::before {
    content: "";
    width: 100%;
    height: 100%;
    background-color: var(--hex-bg-color);
    clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
    grid-area: 1/1;
    z-index: 1;
    transition: background-color 0.3s;
}

.controls {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 15px;
    margin-bottom: 30px;
    width: 100%; /* Ensure controls take full width of container */
}

.button-group {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    justify-content: center;
}

button {
    padding: 8px 16px;
    background-color: var(--button-bg-color);
    color: var(--button-text-color);
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s, color 0.3s;
}

button:hover {
    background-color: var(--button-hover-bg-color);
}

/* Toggle switch styles */
.toggle-group {
    margin-top: 10px;
}

.toggle-label {
    display: flex;
    align-items: center;
    gap: 10px;
    cursor: pointer;
    user-select: none;
}

.toggle-text {
    font-size: 14px;
    color: var(--text-color);
}

.toggle-switch {
    position: relative;
    display: inline-block;
    width: 50px;
    height: 24px;
}

.toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

/* Effects toggle specific styles to avoid conflicts with theme toggle */
.toggle-group .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--text-secondary-color);
    transition: 0.3s;
    border-radius: 24px;
}

.toggle-group .slider:before {
    position: absolute;
    content: "";
    height: 18px;
    width: 18px;
    left: 3px;
    top: 3px;
    background-color: var(--hex-bg-color);
    transition: 0.3s;
    border-radius: 50%;
}

.toggle-group input:checked + .slider {
    background-color: var(--button-bg-color);
}

.toggle-group input:checked + .slider:before {
    transform: translateX(26px);
}

.toggle-group .slider:hover {
    opacity: 0.9;
}

.status {
    padding: 15px;
    background-color: var(--hex-bg-color);
    border-radius: 4px;
    box-shadow: var(--hex-shadow);
    width: 100%;
    max-width: 300px;
    text-align: center;
    margin: 0 auto; /* Center horizontally */
    transition: background-color 0.3s, box-shadow 0.3s;
}

.weather-effects {
    margin-top: 10px;
    text-align: left;
}

.weather-effects h4 {
    margin: 0 0 8px 0;
    color: var(--text-color);
    font-size: 14px;
    text-align: center;
}

.weather-effects ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.weather-effects li {
    padding: 4px 0;
    font-size: 13px;
    color: var(--text-secondary-color);
    border-bottom: 1px solid var(--sidebar-item-bg);
}

.weather-effects li:last-child {
    border-bottom: none;
}

.weather-effects li strong {
    color: var(--text-color);
}

/* Loopback arrow for forbidden transitions */
.loopback-arrow {
    position: absolute;
    width: var(--loopback-arrow-size);
    height: var(--loopback-arrow-size);
    pointer-events: none; /* Don't interfere with hex click events */
    z-index: 20; /* Ensure it's above the hex */
    transform-origin: center center;
    /* Center the arrow in its hex */
    margin-left: calc(var(--hex-size) / 2 - var(--loopback-arrow-size) / 2);
    margin-top: calc(var(--hex-size) / 2 - var(--loopback-arrow-size) / 2);
    /* Ensure smooth transitions for transforms */
    transition: transform 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Position the arrows at the edges of the hex with specific offsets and rotations for each direction */
.loopback-arrow[data-direction="1"] {
    transform: translate(calc(var(--hex-size) * 0.52), calc(var(--hex-size) * -0.37)) rotate(60deg);
}

.loopback-arrow[data-direction="2"] {
    transform: translate(calc(var(--hex-size) * 0.48), calc(var(--hex-size) * 0.23)) rotate(120deg);
}

.loopback-arrow[data-direction="3"] {
    transform: translate(calc(var(--hex-size) * 0), calc(var(--hex-size) * 0.53)) rotate(180deg);
}

.loopback-arrow[data-direction="4"] {
    transform: translate(calc(var(--hex-size) * -0.5), calc(var(--hex-size) * 0.22)) rotate(240deg);
}

.loopback-arrow[data-direction="5"] {
    transform: translate(calc(var(--hex-size) * -0.52), calc(var(--hex-size) * -0.37)) rotate(300deg);
}

.loopback-arrow[data-direction="6"] {
    transform: translate(calc(var(--hex-size) * 0.02), calc(var(--hex-size) * -0.67)) rotate(0deg);
}



.loopback-arrow-object {
    width: 100%;
    height: 100%;
    pointer-events: none;
    background: transparent;
    border: none;
    overflow: visible; /* Ensure the SVG doesn't get clipped */
    background-image: url('../icons/loopbackArrow.svg');
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
}

/* Style for object tag to ensure it behaves correctly */
object.loopback-arrow-object {
    display: block; /* Ensures proper rendering */
    pointer-events: none; /* Prevents interaction with the object */
}

.climate-header-group {
    position: fixed;
    left: 20px;
    top: 20px;
    z-index: 999;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px; /* space between button and header */
}

#selected-climate-season {
    font-weight: bold;
    font-size: 1.1em;
    text-align: center;
}